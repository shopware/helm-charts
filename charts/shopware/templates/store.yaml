apiVersion: shop.shopware.com/v1
kind: Store
metadata:
  name: '{{ .Release.Name }}'
spec:
  disableChecks: {{ .Values.store.disableChecks | default false }}
  {{- if .Values.minio.enabled }}
  cdnURL: 'https://{{ template "generateS3URLApi" . }}/shopware-public'
  {{- else }}
  cdnURL: 'https://{{ template "generateS3URLApi" . }}/{{ .Values.store.s3Storage.publicBucketName }}'
  {{- end }}
  s3Storage:
    {{- if .Values.minio.useTLS }}
    endpointURL: "https://minio.{{ .Release.Namespace }}.svc.cluster.local"
    {{- else }}
    endpointURL: "http://minio.{{ .Release.Namespace }}.svc.cluster.local"
    {{- end }}
    {{- include "getStoreS3" . | nindent 4 -}}

  {{- if hasKey .Values "blackfire" }}
  {{- if hasKey .Values.blackfire "serverID" }}
  {{- if hasKey .Values.blackfire "serverToken" }}
  blackfire:
    enabled: true
    host: {{ template "getBlackfireServiceName" . }}
    port: {{ .Values.blackfire.port | default 8307 }}
  {{- end }}
  {{- end }}
  {{- end }}

  sessionCache:
    {{- if .Values.redissession.enabled }}
    adapter: redis
    redisHost: {{ template "getRedisSessionMasterService" . }}
    {{- else }}
    adapter: builtin
    {{- end }}
  appCache:
    {{- if .Values.redisapp.enabled }}
    adapter: redis
    redisHost: {{ template "getRedisAppMasterService" . }}
    {{- else }}
    adapter: builtin
    {{- end }}

  {{- if hasKey .Values.store "otel" }}
  {{- if hasKey .Values.store.otel "exporterEndpoint" }}
  otel:
    enabled: true
    exporterEndpoint: {{ .Values.store.otel.exporterEndpoint }}
  {{- end }}
  {{- end }}

  fpm:
    {{- if hasKey .Values.store "fpm" }}
    processManagement: {{ .Values.store.fpm.processManagement | default "dynamic" }}
    # TODO: This is not working anymore. We can't use tcp here. It's much slower.
    # listen: {{ .Values.store.fpm.listen | default "unix//tmp/php-fpm.sock" }}
    # scrapeURI: {{ .Values.store.fpm.scrapeURI | default "tcp://127.0.0.1:9000/status" }}
    # statusPath: {{ .Values.store.fpm.statusPath | default "/status" }}
    # maxChildren: {{ .Values.store.fpm.maxChildren | default 8 }}
    # startServers: {{ .Values.store.fpm.startServers | default 8 }}
    # minSpareServers: {{ .Values.store.fpm.minSpareServers | default 4 }}
    # maxSpareServers: {{ .Values.store.fpm.maxSpareServers | default 8 }}
    {{- else }}
    processManagement: "dynamic"
    {{- end }}

  horizontalPodAutoscaler:
    {{- with .Values.store.horizontalPodAutoscaler }}
      {{- toYaml . | nindent 4 }}
    {{- end }}

  setupHook:
    {{- with .Values.store.setupHook }}
      {{- toYaml . | nindent 4 }}
    {{- end }}

  database:
    host: {{ template "getDBService" . }}
    version: '8'
    port: 3306
    user: 'root'
    name: 'shopware'
    passwordSecretRef:
      name: {{ template "getPerconaSecrets" . }}
      key: root
  network:
    host: {{ template "generateHost" . }}
    {{- if hasKey .Values.store "network" }}
    enabledIngress: {{ .Values.store.network.enabled | default false }}
    ingressClassName: {{ .Values.store.network.ingressClassName | default "standard" }}
    annotations:
      {{- with .Values.store.network.annotations }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- end }}
  container:
    image: {{ .Values.store.container.image }}
    replicas: {{ .Values.store.container.replicas | default 2 }}
    progressDeadlineSeconds: {{ .Values.store.container.progressDeadlineSeconds | default 30 }}
    imagePullPolicy: {{ .Values.store.container.imagePullPolicy | default "IfNotPresent" }}
    restartPolicy: {{ .Values.store.container.imagePullPolicy | default "Always" }}
    volumeMounts:
      - mountPath: /etc/caddy
        name: {{ template "getCaddyConfigName" . }}

    imagePullSecrets:
      {{- with .Values.store.container.imagePullSecrets }}
        {{- toYaml . | nindent 8 }}
      {{- end }}

    topologySpreadConstraints:
      {{- with .Values.store.container.topologySpreadConstraints }}
        {{- toYaml . | nindent 8 }}
      {{- end }}

    nodeSelector:
      {{- with .Values.store.container.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}

    affinity:
      {{- with .Values.store.container.affinity }}
          {{- toYaml . | nindent 8 }}
      {{- end }}

    extraContainers:
      {{- with .Values.store.container.extraContainers }}
          {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if hasKey .Values.store "fpm" }}
      {{- if ne .Values.store.fpm.processManagement "dynamic" }}
      - name: php-fpm-exporter
        env:
        - name: PHP_FPM_SCRAPE_URI
          value: {{ .Values.store.fpm.scrapeURI | default "tcp://127.0.0.1:9000/status" }}
        image: hipages/php-fpm_exporter
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9253
          protocol: TCP
        resources:
          limits:
            cpu: 30m
            memory: 32Mi
          requests:
            cpu: 10m
            memory: 10Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      {{- end }}
      {{- end }}

    resources:
      {{- with .Values.store.container.resources }}
          {{- toYaml . | nindent 6 }}
      {{- end }}
    extraEnvs:
      {{- with .Values.store.container.extraEnvs }}
          {{- toYaml . | nindent 6 }}
      {{- end }}
    volumes:
      - configMap:
          defaultMode: 420
          name: {{ template "getCaddyConfigName" . }}
        name: {{ template "getCaddyConfigName" . }}
